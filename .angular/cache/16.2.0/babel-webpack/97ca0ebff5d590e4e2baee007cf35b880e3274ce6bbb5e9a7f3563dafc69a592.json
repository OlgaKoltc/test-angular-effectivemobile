{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (this.authService.isLoggedIn()) {\n      this.router.navigate(['/login']);\n      return false;\n    }\n    return true;\n  }\n  canDeactivate(component, currentRoute, currentState, nextState) {\n    if (confirm('Are you sure?')) {\n      localStorage.removeItem('token');\n      return true;\n    }\n    return false;\n  }\n}\n_class = AuthGuard;\n_class.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthGuard","constructor","authService","router","canActivate","route","state","isLoggedIn","navigate","canDeactivate","component","currentRoute","currentState","nextState","confirm","localStorage","removeItem","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["/Users/a1/test-angular-effectivemobile/src/app/guards/auth.guard.ts"],"sourcesContent":["// import { AuthService } from './../services/auth.service';\n// import { Observable } from 'rxjs';\n\n// import { Injectable } from '@angular/core';\n// import {\n//   ActivatedRouteSnapshot,\n//   CanActivateFn,\n//   Router,\n//   RouterStateSnapshot,\n// } from '@angular/router';\n\n// @Injectable({\n//   providedIn: 'root',\n// })\n// export class AuthGuard implements CanActivateFn {\n//   constructor(private authService: AuthService, private router: Router) {}\n\n//   canActivateFn(\n//     route: ActivatedRouteSnapshot,\n//     state: RouterStateSnapshot\n//   ): Observable<boolean> | Promise<boolean> | boolean {\n//     console.log('canactivate is called');\n//     const { url } = state;\n//     return this.checkLogin(url);\n//   }\n//   private checkLogin(url: string): boolean {\n//     if (this.authService.isLoggedIn) {\n//       return true;\n//     }\n//     this.authService.redirectUrl = url;\n//     this.router.navigate(['/login']);\n//     return false;\n//   }\n// }\nimport { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanDeactivate,\n  Route,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate, CanDeactivate<unknown> {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (this.authService.isLoggedIn()) {\n      this.router.navigate(['/login']);\n      return false;\n    }\n    return true;\n  }\n\n  canDeactivate(\n    component: unknown,\n    currentRoute: ActivatedRouteSnapshot,\n    currentState: RouterStateSnapshot,\n    nextState?: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (confirm('Are you sure?')) {\n      localStorage.removeItem('token');\n      return true;\n    }\n    return false;\n  }\n}\n"],"mappings":";;;;AAkDA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEvEC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAM1B,IAAI,IAAI,CAACJ,WAAW,CAACK,UAAU,EAAE,EAAE;MACjC,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;IAEd,OAAO,IAAI;EACb;EAEAC,aAAaA,CACXC,SAAkB,EAClBC,YAAoC,EACpCC,YAAiC,EACjCC,SAA+B;IAM/B,IAAIC,OAAO,CAAC,eAAe,CAAC,EAAE;MAC5BC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;MAChC,OAAO,IAAI;;IAEb,OAAO,KAAK;EACd;;SAjCWhB,SAAS;;mBAATA,MAAS,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;SAATtB,MAAS;EAAAuB,OAAA,EAATvB,MAAS,CAAAwB,IAAA;EAAAC,UAAA,EAFR;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}