{"ast":null,"code":"// import { AuthService } from './../services/auth.service';\n// import { Observable } from 'rxjs';\n// import { Injectable } from '@angular/core';\n// import {\n//   ActivatedRouteSnapshot,\n//   CanActivateFn,\n//   Router,\n//   RouterStateSnapshot,\n// } from '@angular/router';\n// @Injectable({\n//   providedIn: 'root',\n// })\n// export class AuthGuard implements CanActivateFn {\n//   constructor(private authService: AuthService, private router: Router) {}\n//   canActivateFn(\n//     route: ActivatedRouteSnapshot,\n//     state: RouterStateSnapshot\n//   ): Observable<boolean> | Promise<boolean> | boolean {\n//     console.log('canactivate is called');\n//     const { url } = state;\n//     return this.checkLogin(url);\n//   }\n//   private checkLogin(url: string): boolean {\n//     if (this.authService.isLoggedIn) {\n//       return true;\n//     }\n//     this.authService.redirectUrl = url;\n//     this.router.navigate(['/login']);\n//     return false;\n//   }\n// }\n// import { Injectable } from '@angular/core';\n// import {\n//   ActivatedRouteSnapshot,\n//   CanActivate,\n//   CanDeactivate,\n//   Route,\n//   Router,\n//   RouterStateSnapshot,\n//   UrlTree,\n// } from '@angular/router';\n// import { Observable } from 'rxjs';\n// import { AuthService } from '../services/auth.service';\n//\n// @Injectable({\n//   providedIn: 'root',\n// })\n// export class AuthGuard implements CanActivate, CanDeactivate<unknown> {\n//   constructor(private authService: AuthService, private router: Router) {}\n//\n//   canActivate(\n//     route: ActivatedRouteSnapshot,\n//     state: RouterStateSnapshot\n//   ):\n//     | Observable<boolean | UrlTree>\n//     | Promise<boolean | UrlTree>\n//     | boolean\n//     | UrlTree {\n//     if (!this.authService.isLoggedIn()) {\n//       this.router.navigate(['/login']);\n//       return false;\n//     }\n//     return true;\n//   }\n//\n//   canDeactivate(\n//     component: unknown,\n//     currentRoute: ActivatedRouteSnapshot,\n//     currentState: RouterStateSnapshot,\n//     nextState?: RouterStateSnapshot\n//   ):\n//     | Observable<boolean | UrlTree>\n//     | Promise<boolean | UrlTree>\n//     | boolean\n//     | UrlTree {\n//     if (confirm('Are you sure?')) {\n//       localStorage.removeItem('token');\n//       return true;\n//     }\n//     return false;\n//   }\n// }","map":{"version":3,"names":[],"sources":["/Users/a1/test-angular-effectivemobile/src/app/guards/auth.guard.ts"],"sourcesContent":["// import { AuthService } from './../services/auth.service';\n// import { Observable } from 'rxjs';\n\n// import { Injectable } from '@angular/core';\n// import {\n//   ActivatedRouteSnapshot,\n//   CanActivateFn,\n//   Router,\n//   RouterStateSnapshot,\n// } from '@angular/router';\n\n// @Injectable({\n//   providedIn: 'root',\n// })\n// export class AuthGuard implements CanActivateFn {\n//   constructor(private authService: AuthService, private router: Router) {}\n\n//   canActivateFn(\n//     route: ActivatedRouteSnapshot,\n//     state: RouterStateSnapshot\n//   ): Observable<boolean> | Promise<boolean> | boolean {\n//     console.log('canactivate is called');\n//     const { url } = state;\n//     return this.checkLogin(url);\n//   }\n//   private checkLogin(url: string): boolean {\n//     if (this.authService.isLoggedIn) {\n//       return true;\n//     }\n//     this.authService.redirectUrl = url;\n//     this.router.navigate(['/login']);\n//     return false;\n//   }\n// }\n// import { Injectable } from '@angular/core';\n// import {\n//   ActivatedRouteSnapshot,\n//   CanActivate,\n//   CanDeactivate,\n//   Route,\n//   Router,\n//   RouterStateSnapshot,\n//   UrlTree,\n// } from '@angular/router';\n// import { Observable } from 'rxjs';\n// import { AuthService } from '../services/auth.service';\n//\n// @Injectable({\n//   providedIn: 'root',\n// })\n// export class AuthGuard implements CanActivate, CanDeactivate<unknown> {\n//   constructor(private authService: AuthService, private router: Router) {}\n//\n//   canActivate(\n//     route: ActivatedRouteSnapshot,\n//     state: RouterStateSnapshot\n//   ):\n//     | Observable<boolean | UrlTree>\n//     | Promise<boolean | UrlTree>\n//     | boolean\n//     | UrlTree {\n//     if (!this.authService.isLoggedIn()) {\n//       this.router.navigate(['/login']);\n//       return false;\n//     }\n//     return true;\n//   }\n//\n//   canDeactivate(\n//     component: unknown,\n//     currentRoute: ActivatedRouteSnapshot,\n//     currentState: RouterStateSnapshot,\n//     nextState?: RouterStateSnapshot\n//   ):\n//     | Observable<boolean | UrlTree>\n//     | Promise<boolean | UrlTree>\n//     | boolean\n//     | UrlTree {\n//     if (confirm('Are you sure?')) {\n//       localStorage.removeItem('token');\n//       return true;\n//     }\n//     return false;\n//   }\n// }\n"],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"script","externalDependencies":[]}